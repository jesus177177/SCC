package com.sistemacontrolclinico.web.app;



import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
import org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;

import com.sistemacontrolclinico.web.app.auth.controllers.LoginSuccessHandler;
import com.sistemacontrolclinico.web.app.models.service.JpaUserDetailService;

@SuppressWarnings("deprecation")
@Configuration
@EnableGlobalMethodSecurity(securedEnabled = true)
@EnableWebSecurity
public class SpringSecurityConfig extends WebSecurityConfigurerAdapter {
	
	@Autowired
	private BCryptPasswordEncoder passwordEncoder;

	@Autowired
	private LoginSuccessHandler successHandler;
	

	
	@Autowired
	private JpaUserDetailService userDetailsService;
	
	@Override
	protected void configure(HttpSecurity http) throws Exception {
		http.authorizeRequests().antMatchers("/","/css/**","/js/**","/images/**","/listar").permitAll()
		//.antMatchers("/citas/**").hasRole("USER")
		//.antMatchers("/configuracion/**").hasRole("USER")//Define el tipo de usuario con acceso a esa ruta.
		//.antMatchers("/pacientes/**").hasRole("ADMIN")
		//.antMatchers("/biblioteca/**").hasRole("ADMIN")
		.anyRequest().authenticated()
		.and()
		.formLogin()
			.successHandler(successHandler)// hcer que incie con permisos de ls otrs tsbls 
			.loginPage("/login")
		.permitAll()
		.and()
		.logout().permitAll()
		.and()
		.exceptionHandling().accessDeniedPage("/error_403");
		
	}


	@Autowired
	public void configurerGlobal(AuthenticationManagerBuilder build) throws Exception
	{
		build.userDetailsService(userDetailsService)
		.passwordEncoder(passwordEncoder);
		
	}
}
